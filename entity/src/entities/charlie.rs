//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.6

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "charlie")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub alpha_id: i32,
    #[sea_orm(primary_key, auto_increment = false)]
    pub bravo_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::alpha::Entity",
        from = "Column::AlphaId",
        to = "super::alpha::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Alpha,
    #[sea_orm(
        belongs_to = "super::bravo::Entity",
        from = "Column::AlphaId",
        to = "super::bravo::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Bravo,
}

impl Related<super::alpha::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Alpha.def()
    }
}

impl Related<super::bravo::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Bravo.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
